package main

import (
	"fmt"
	"github.com/tatsushid/go-fastping"
	"net"
	"time"
)

type PingParams struct {
	TargetIp string `json:"targetIp"`
}

func ping(params PingParams) (bool, error) {
	pinger := fastping.NewPinger()

	ra, err := net.ResolveIPAddr("ip4:icmp", params.TargetIp)
	if err != nil {
		return false, err
	}

	pinger.AddIPAddr(ra)

	var recvSuccess bool = false // Flag to track successful OnRecv

	pinger.OnRecv = func(addr *net.IPAddr, rtt time.Duration) {
		fmt.Printf("IP Addr: %s receive, RTT: %v\n", addr.String(), rtt)
		recvSuccess = true
	}

	pinger.OnIdle = func() {

	}

	defer func() {
		pinger.Stop()
	}()

	err = pinger.Run()
	if err != nil {
		return false, err
	}

	if recvSuccess {
		return recvSuccess, nil
	}

	return false, err
}
