package main

import (
	"fmt"
	"io"
	"net/http"
	"os"
	"runtime"
)

func fileExists(filename string) bool {
	_, err := os.Stat(filename)
	return !os.IsNotExist(err)
}

func UserHomeDir() string {
	if runtime.GOOS == "windows" {
		home := os.Getenv("HOMEDRIVE") + os.Getenv("HOMEPATH")
		if home == "" {
			home = os.Getenv("USERPROFILE")
		}
		return home
	}
	return os.Getenv("HOME")
}

type InstallTunnelParams struct {
}

func DownloadFile(filepath string, url string) error {

	// Get the data
	resp, err := http.Get(url)
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	// Create the file
	out, err := os.Create(filepath)
	if err != nil {
		return err
	}
	defer out.Close()

	// Write the body to file
	_, err = io.Copy(out, resp.Body)
	return err
}

func installTunnel(params InstallTunnelParams) (string, error) {
	// install ngrok
	// start ngrok
	// get ngrok url
	// send ngrok url to server

	return "ok", nil
}

type InstallIpScannerParams struct{}

func installIpScanner(params InstallIpScannerParams) (string, error) {

	var installDirPath string = "%appdata%\\agent\\"

	err := DownloadFile(installDirPath, "")
	if err != nil {
		fmt.Println("Error downloading file: ", err)
		return "Download error", err
	}

	return "success", nil

}
