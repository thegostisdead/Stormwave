package main

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"net/http"
)

func announce() error {

	config := loadConfig(true)

	url := config.Gateway + "/"

	uuid, err := GetMachineUUID()

	if err != nil {
		fmt.Printf("[ANNOUNCE] faild to get machine uuid.")
	}

	data := map[string]interface{}{
		"name": "ANNOUNCE",
		"id":   uuid,
	}

	b, err := json.Marshal(data)

	if err != nil {
		fmt.Println("Error during json")
	}

	fmt.Println("Announce message : ")
	fmt.Println(string(b))

	request, err := http.NewRequest("POST", url, bytes.NewBuffer(b))
	request.Header.Set("Content-Type", "application/json")

	client := &http.Client{}
	response, err := client.Do(request)
	if err != nil {
		return err
	}
	defer response.Body.Close()

	if response.Status != "200 OK" {
		return errors.New("AnnounceFailure")
	}

	return nil

}
